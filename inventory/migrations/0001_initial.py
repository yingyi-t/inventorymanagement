# Generated by Django 3.1.7 on 2021-03-30 03:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Material',
            fields=[
                ('material_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='MaterialQuantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_quantities', to='inventory.material')),
            ],
            options={
                'verbose_name_plural': 'Material Quantities',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('materials', models.ManyToManyField(related_name='products', through='inventory.MaterialQuantity', to='inventory.Material')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('store_id', models.AutoField(primary_key=True, serialize=False)),
                ('store_name', models.CharField(max_length=100, unique=True)),
                ('products', models.ManyToManyField(blank=True, to='inventory.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MaterialStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_capacity', models.PositiveIntegerField(default=9999)),
                ('current_capacity', models.PositiveIntegerField(default=0)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_stocks', to='inventory.material')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_stocks', to='inventory.store')),
            ],
            options={
                'verbose_name_plural': 'Material Stocks',
            },
        ),
        migrations.AddField(
            model_name='materialquantity',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_quantities', to='inventory.product'),
        ),
        migrations.AddConstraint(
            model_name='material',
            constraint=models.CheckConstraint(check=models.Q(price__gte=0), name='price >= 0'),
        ),
        migrations.AddConstraint(
            model_name='materialstock',
            constraint=models.CheckConstraint(check=models.Q(max_capacity__gt=0), name='max capacity >= 0'),
        ),
        migrations.AddConstraint(
            model_name='materialstock',
            constraint=models.CheckConstraint(check=models.Q(('current_capacity__gte', 0), ('current_capacity__lte', django.db.models.expressions.F('max_capacity'))), name='current capacity >= to 0 and <= max capacity'),
        ),
        migrations.AddConstraint(
            model_name='materialstock',
            constraint=models.UniqueConstraint(fields=('store', 'material'), name='unique material stock'),
        ),
        migrations.AddConstraint(
            model_name='materialquantity',
            constraint=models.CheckConstraint(check=models.Q(quantity__gt=0), name='quantity > 0'),
        ),
        migrations.AddConstraint(
            model_name='materialquantity',
            constraint=models.UniqueConstraint(fields=('product', 'ingredient'), name='unique product quantity'),
        ),
    ]
